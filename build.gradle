plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'groovy'
    id 'java'
    id "com.github.node-gradle.node" version "3.0.1"
}

group 'com.dabramov.todoservice'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs += ['src/main/java'] }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.5'
    implementation 'org.codehaus.groovy:groovy:3.0.8'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.5.5'
    implementation 'org.projectlombok:lombok:1.18.20'

    runtimeOnly 'com.h2database:h2:1.4.200'
    implementation 'org.postgresql:postgresql:42.2.24.jre7'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.5'
}

test {
    useJUnitPlatform()
}

task build_web(type: Exec) {
    workingDir 'src/main/webapp'
    if (System.getProperty("os.name").toLowerCase().contains("windows"))
        commandLine("cmd.exe", "/C", "npm.cmd run build")
    else
        commandLine("npm", "run", "build")
}

task rename_web(type: Copy) {
    from('src/main/webapp/build') {
        rename 'build', 'static'
    }
    into 'src/main/resources/public'
}

task create_cmd(type: Copy){
    String command = "java -jar ${project.name}-${version}.jar"
    File file = new File('src/scripts/start.cmd')
    file.write(command)
    from 'src/scripts'
    into 'build/libs'
}

build.dependsOn build_web
build_web.finalizedBy rename_web
build.finalizedBy create_cmd
